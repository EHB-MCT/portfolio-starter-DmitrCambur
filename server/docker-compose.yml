version: "3.8"
services:
  api:
    build: ./images/api
    image: x5rrt4393dd/server-api
    ports:
      - "8080:3000"
    volumes:
      - ./images/api/src:/usr/app/src
    environment:
      POSTGRES_USER: example
      POSTGRES_PASSWORD: example
      POSTGRES_DB: test
      POSTGRES_HOST: store
      POSTGRES_PORT: 5432
    depends_on:
      store:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail http://localhost:3000/health || exit 1",
        ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  store:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: example
      POSTGRES_PASSWORD: example
      POSTGRES_DB: test
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./_backup:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U example -d test"]
      interval: 10s
      timeout: 5s
      retries: 5

  test:
    build: ./images/api
    command: npm test
    depends_on:
      api:
        condition: service_healthy
      store:
        condition: service_healthy

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_POLL_INTERVAL: 300
